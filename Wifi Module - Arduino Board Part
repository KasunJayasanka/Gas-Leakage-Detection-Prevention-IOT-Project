// Libraries for DS18B20 Temperature Sensor 
#include <OneWire.h>
#include <DallasTemperature.h>

#include <RTClib.h> //Library for DS3231 RTC Module

#include <HX711.h> //Libaray for HX711 Load Cell Amplifier Module

#include <ArduinoJson.h> //Library for Generating Json Objects

//To Temperature Sensor
#define ONE_WIRE_BUS 28

OneWire oneWire(ONE_WIRE_BUS);
// Setup a oneWire instance to communicate with any OneWire devices
// Pass our oneWire reference to Dallas Temperature sensor 
DallasTemperature sensors(&oneWire);

//Variables for Gas Sensor Reading
float lpGasThreshVal=500.0;
float lpGasReadingVal;

//Count For Gas Weight Calculation
int count = 0;

// Pin connected to the MQ-6 Gas Sensor input
const int gasSensorPin = A0;

//Flame Sensor
const int flameSensorPin = 3;

//Boolean values about the Flame Sensor and Gas Sensor
bool gasLeakageDetected = false;
bool flameDetected = false;

//magnetic sensor and window alert buzzer
const int magSensorBuzzer = 5; 
const int magneticSensor = 6;

//RTC Module
RTC_DS3231 rtc;
// char t[32];
// String date,time,dateTime;
StaticJsonDocument<128> dateTimeDoc;

//Magnetic Sensor
int window1State;

//Flame Sensor
int flameSensor;

//Temperature Sensor
float temperatureValue;

//Load Cell (Load Cell)
HX711 cell;
int weightDTpin = 25;
int weightSCKpin = 23; 
float gasWeight=0.0;


void setup() {

  //For Serial Communications
  Serial.begin(9600);

  //Setup GAS Sensor Analog Input Pin
  pinMode(A0,INPUT);
  
  //For Temperature Sensor
  sensors.begin();

  // Set the sensor pin as an input
  pinMode(gasSensorPin, INPUT);

  //Flame sensor
  pinMode(flameSensorPin,INPUT);

  //magnetic sensor
  pinMode(magneticSensor,INPUT_PULLUP);
  pinMode(magSensorBuzzer,OUTPUT);

  //RTC Module
  Wire.begin();
  rtc.begin();

  //Adjusting Current Date Time of RTC
  rtc.adjust(DateTime(2023, 7, 13, 12, 0, 0));

  //Load Cell
  cell.begin(weightDTpin,weightSCKpin);

}


void loop() {

  String dateTimeString=getDateTime();

  deserializeJson(dateTimeDoc,dateTimeString);
  
  String date=dateTimeDoc["date"];
  String time=dateTimeDoc["time"];
  String dateTime=date+" "+time;

  lpGasReadingVal = analogRead(gasSensorPin);

  //magnetic sensor
  window1State=digitalRead(magneticSensor);

  //Getting Weight of the Gas Cylinder
  gasWeight = getGasCylinderWeight();

  //Read the Temperature Value
  temperatureValue=sensors.getTempCByIndex(0);

  //Sending Current Environment Data to Wifi Sheild
  makeSerialPayLoad(dateTime,gasLeakageDetected,flameDetected,temperatureValue,window1State,gasWeight);
  
  if(lpGasReadingVal>=lpGasThreshVal){
  


  //Sending Current Environment Data to Wifi Sheild
  makeSerialPayLoad(dateTime,gasLeakageDetected,flameDetected,temperatureValue,window1State,gasWeight);
  
  
  delay(6000);

  }
  
  else{

    gasLeakageDetected=false;
   
  }

  //Flame Sensor
  flameSensor = digitalRead(flameSensorPin);

  if(flameSensor==0)//check if flame is detected
  {
      
    
    //Sending Current Environment Data to Wifi Sheild
    makeSerialPayLoad(dateTime,gasLeakageDetected,flameDetected,temperatureValue,window1State,gasWeight);

    delay(6000);  

  }

  else
  {
      flameDetected = false;  
  }

}


/*==========================Serial Communicating to WiFi Sheild=======================*/

void makeSerialPayLoad(String dateTime,bool gasLeakageDetected,bool flameDetected,float temperatureValue,int window1State,float gasWeight){

    String serialPayload;

    // We build the serial payload with & separation

    serialPayload = "*"
    +dateTime  // 0th index you will have dateTime value
    +"&"
    + String(gasLeakageDetected) 
    + "&" 
    + String(flameDetected) 
    + "&"
    + String(temperatureValue)
    + "&"
    + String(window1State)
    + "&"
    + String(gasWeight)
    + "$";

    Serial.print(serialPayload);

    delay(2000);
}

